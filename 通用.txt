

管一个数是正数还是负数，都要被转成补码，然后进行运算.
反码(正数的反码和它的原码一样 , 负数反码 是 符号位不变其它位取反)
补码(正数的补码和它的原码一样，负数的补码是 它的反码+1)




位移运算
在php 中位运算有两种 >> (右移) << （左移）

运算的规则是 :
算术右移：低位溢出,符号位不变,并用符号位补溢出的高位
   算术左移: 符号位不变,低位补0 
左移*2 右移/2

windows服务器 远程连接 mstsc

public function col_add()
	{
	
		$this->display('col_info');
	}

	// 栏目添加
	public function col_insert()
	{

action中 add是一个操作的总称 insert指插入数据的具体数据库操作 在action中指定

代码看似正确不能执行 如果是复制过来的注意中英文符号等问题 删除重新照写
注意参数到底是post还是get传来的 接收要注意

 一、变量 
最好是把所有的变量存储在一个数组中，这样在程序的开发中可以带来很多的方便，特别是当程序很大的时候。变量的命名就当适合自己的习惯，不管是用拼音还是英语，至少应当有一定的意义，以便适合记忆。变量的命名尽量规范化，不要与PHP中的关键字相冲突。

二、函数 
PHP自带了很多函数，这给我们程序的编写带来了很多的方便。当然，在大型程序中我们往往自己要定义许多个函数，几十甚至上百个。当然在使用了类的程序中就不叫函数了，就应该叫方法，这里暂且不谈类的使用方法。函数多了，难免就会搞混了。有什么方法可以解决这个问题呢？可以参照上面变量的使用方法一样，同样的，我们也可以把自己定义的函数名全都放在一个数组中。这样我们在使用的过程中可以直接在数组随时检查函数是否有无重复的定义。如果发现重复的现象，马上变可以改过来。提高了程序编写的速度。函数的使用还有一点要注意的是全局变量，虽然这是一个小问题，但却不容忽视，要不然当某个变量千呼万呼出不来的时候，呵呵。这时看看该变量是否在该函数中已经申明成了全局变量。

三、程序的注释 
程序的注释是很重要的，不管是C还是JAVA，程序的注释往往可以体现出程序员的良好编程风格。无论是对于它人还是自己对大有好处，当然我们这里说的是大型项目的开发，团体合作精神是很重要的。当你的程序写出来别人都很难看懂那还怎么谈团体合作精神啊。当然如果这个大型项目是你一个人开发的那就另当别论了，或者是你时间紧迫，来不及写注释。不过一般来说这种情况是很少的。除非真的是非常时刻。一个优秀的程序员绝对会为他写的每个程序加注释，哪怕是给自己看的。

四、采用何种文本编辑软件写源程序 
这其实也没一定的规定，只要自己喜欢就行了。我比较喜欢PHPEDIT，也许是用惯了，现在感觉一离开PHPEDIT写PHP就没感觉，初学PHP的时候用NOTEPAD写，因为程序比较简单。所以用NOTEPAD应付下就行了，对于有几百行的程序来讲，用NOTEPAD显然是不合适的。用PHPEDIT 工作效率会提高几倍，哪怕你从来没用过。

五、数据库的设计 
数据库的设计在开发大型项目中是很重要的一点，关系到整个项目开发的成败。具体也就不多说了。大家可以在自己的实践中积累经验，慢慢去体会。总之在数据库的设计中最好应该一开始就应该确定下来。虽然可以在开发的过程中去改变已经设计好的数据库结构，但这对于整个项目的开发效率来讲将大打折扣，有谁会愿意时不时的去改数据库的结构呢？ 
六、类的使用 
类的使用主要是实现了代码的重复使用，以降低项目开发的时间，程序员的工作量也会减少许多。只要可以使用类的地方应当尽量使用类，使用类应该养成一个良好的习惯，这样才可以在真正使用类的地方得心应手。可以说一个大型PHP项目就是由类组成的。个中的滋味还是自己慢慢体会吧。 
总之，在开发大型PHP项目的时候，要预算好时间。特别要小心客户在半途来个回马枪，那就功亏一篑了。

ipconfig空格/all window下